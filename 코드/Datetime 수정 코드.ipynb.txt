{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "DS_udangtang_tp.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KkutkQhkxQmk"
      },
      "source": [
        "##1.라이브러리 & 폰트 설정"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2e771291-fa8f-40fb-c0d1-0638177dfbc3",
        "id": "1Vqvw-hBxQmp"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Reading package lists... Done\n",
            "Building dependency tree       \n",
            "Reading state information... Done\n",
            "fonts-nanum is already the newest version (20170925-1).\n",
            "The following package was automatically installed and is no longer required:\n",
            "  libnvidia-common-460\n",
            "Use 'sudo apt autoremove' to remove it.\n",
            "0 upgraded, 0 newly installed, 0 to remove and 42 not upgraded.\n",
            "/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n",
            "/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n",
            "/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n",
            "/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n",
            "/usr/share/fonts/truetype/nanum: caching, new cache contents: 10 fonts, 0 dirs\n",
            "/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n",
            "/root/.local/share/fonts: skipping, no such directory\n",
            "/root/.fonts: skipping, no such directory\n",
            "/var/cache/fontconfig: cleaning cache directory\n",
            "/root/.cache/fontconfig: not cleaning non-existent cache directory\n",
            "/root/.fontconfig: not cleaning non-existent cache directory\n",
            "fc-cache: succeeded\n"
          ]
        }
      ],
      "source": [
        "!sudo apt-get install -y fonts-nanum\n",
        "!sudo fc-cache -fv\n",
        "!rm ~/.cache/matplotlib -rf"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "NR7HpBNCxQmq"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from datetime import datetime"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "tqWdFYLkxQmq"
      },
      "outputs": [],
      "source": [
        "plt.rc('font', family='NanumBarunGothic') \n",
        "plt.rcParams[\"figure.figsize\"] = (12, 9)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#행 중간 잘리지 않게\n",
        "\n",
        "pd.set_option('display.max_rows', None)"
      ],
      "metadata": {
        "id": "_ByXyMxrpawi"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IhiaxZz1xQmq"
      },
      "source": [
        "##2.파일 업로드"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "JgHlblsKxQmq"
      },
      "outputs": [],
      "source": [
        "df = pd.read_csv('https://drive.google.com/uc?export=download&id=1kJwY2WWf8Oq1RKd_w6lZ7D3jofJLdZYB', encoding='cp949')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8948b020-3f39-4f28-e6f9-6ba5c80b925d",
        "id": "4tFFPf6dxQmr"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 236 entries, 0 to 235\n",
            "Columns: 115 entries, 지역 to 21.Jun\n",
            "dtypes: float64(114), object(1)\n",
            "memory usage: 212.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##3.데이터 전처리"
      ],
      "metadata": {
        "id": "of_6njLXxQmr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#NaN 개수 확인\n",
        "\n",
        "df.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8ffeae9e-4701-4aac-f334-65bad403913a",
        "id": "s_GkkLNsxQmr"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "지역        0\n",
              "12.Jan    7\n",
              "12.Feb    7\n",
              "12.Mar    7\n",
              "12.Apr    7\n",
              "12.May    7\n",
              "12.Jun    7\n",
              "12.Jul    7\n",
              "12.Aug    7\n",
              "12.Sep    7\n",
              "12.Oct    7\n",
              "12.Nov    7\n",
              "12.Dec    7\n",
              "13.Jan    7\n",
              "13.Feb    7\n",
              "13.Mar    7\n",
              "13.Apr    7\n",
              "13.May    7\n",
              "13.Jun    7\n",
              "13.Jul    7\n",
              "13.Aug    7\n",
              "13.Sep    7\n",
              "13.Oct    7\n",
              "13.Nov    7\n",
              "13.Dec    7\n",
              "14.Jan    7\n",
              "14.Feb    7\n",
              "14.Mar    7\n",
              "14.Apr    7\n",
              "14.May    7\n",
              "14.Jun    7\n",
              "14.Jul    6\n",
              "14.Aug    6\n",
              "14.Sep    6\n",
              "14.Oct    6\n",
              "14.Nov    6\n",
              "14.Dec    6\n",
              "15.Jan    6\n",
              "15.Feb    6\n",
              "15.Mar    6\n",
              "15.Apr    6\n",
              "15.May    6\n",
              "15.Jun    6\n",
              "15.Jul    6\n",
              "15.Aug    6\n",
              "15.Sep    6\n",
              "15.Oct    6\n",
              "15.Nov    6\n",
              "15.Dec    6\n",
              "16.Jan    6\n",
              "16.Feb    6\n",
              "16.Mar    6\n",
              "16.Apr    6\n",
              "16.May    6\n",
              "16.Jun    6\n",
              "16.Jul    9\n",
              "16.Aug    9\n",
              "16.Sep    9\n",
              "16.Oct    9\n",
              "16.Nov    9\n",
              "16.Dec    9\n",
              "17.Jan    9\n",
              "17.Feb    9\n",
              "17.Mar    9\n",
              "17.Apr    9\n",
              "17.May    9\n",
              "17.Jun    9\n",
              "17.Jul    9\n",
              "17.Aug    9\n",
              "17.Sep    9\n",
              "17.Oct    9\n",
              "17.Nov    9\n",
              "17.Dec    9\n",
              "18.Jan    9\n",
              "18.Feb    9\n",
              "18.Mar    9\n",
              "18.Apr    9\n",
              "18.May    9\n",
              "18.Jun    9\n",
              "18.Jul    9\n",
              "18.Aug    9\n",
              "18.Sep    9\n",
              "18.Oct    9\n",
              "18.Nov    9\n",
              "18.Dec    9\n",
              "19.Jan    9\n",
              "19.Feb    9\n",
              "19.Mar    9\n",
              "19.Apr    9\n",
              "19.May    9\n",
              "19.Jun    9\n",
              "19.Jul    9\n",
              "19.Aug    9\n",
              "19.Sep    9\n",
              "19.Oct    9\n",
              "19.Nov    9\n",
              "19.Dec    9\n",
              "20.Jan    9\n",
              "20.Feb    9\n",
              "20.Mar    9\n",
              "20.Apr    9\n",
              "20.May    9\n",
              "20.Jun    9\n",
              "20.Jul    9\n",
              "20.Aug    9\n",
              "20.Sep    9\n",
              "20.Oct    9\n",
              "20.Nov    9\n",
              "20.Dec    9\n",
              "21.Jan    9\n",
              "21.Feb    9\n",
              "21.Mar    9\n",
              "21.Apr    9\n",
              "21.May    9\n",
              "21.Jun    9\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#NaN 행 삭제\n",
        "\n",
        "df = df.dropna()\n",
        "df.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "528da3d9-4ce3-4ec8-aa62-cf0c05bd8580",
        "id": "DzgX34xVxQmr"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "지역        0\n",
              "12.Jan    0\n",
              "12.Feb    0\n",
              "12.Mar    0\n",
              "12.Apr    0\n",
              "12.May    0\n",
              "12.Jun    0\n",
              "12.Jul    0\n",
              "12.Aug    0\n",
              "12.Sep    0\n",
              "12.Oct    0\n",
              "12.Nov    0\n",
              "12.Dec    0\n",
              "13.Jan    0\n",
              "13.Feb    0\n",
              "13.Mar    0\n",
              "13.Apr    0\n",
              "13.May    0\n",
              "13.Jun    0\n",
              "13.Jul    0\n",
              "13.Aug    0\n",
              "13.Sep    0\n",
              "13.Oct    0\n",
              "13.Nov    0\n",
              "13.Dec    0\n",
              "14.Jan    0\n",
              "14.Feb    0\n",
              "14.Mar    0\n",
              "14.Apr    0\n",
              "14.May    0\n",
              "14.Jun    0\n",
              "14.Jul    0\n",
              "14.Aug    0\n",
              "14.Sep    0\n",
              "14.Oct    0\n",
              "14.Nov    0\n",
              "14.Dec    0\n",
              "15.Jan    0\n",
              "15.Feb    0\n",
              "15.Mar    0\n",
              "15.Apr    0\n",
              "15.May    0\n",
              "15.Jun    0\n",
              "15.Jul    0\n",
              "15.Aug    0\n",
              "15.Sep    0\n",
              "15.Oct    0\n",
              "15.Nov    0\n",
              "15.Dec    0\n",
              "16.Jan    0\n",
              "16.Feb    0\n",
              "16.Mar    0\n",
              "16.Apr    0\n",
              "16.May    0\n",
              "16.Jun    0\n",
              "16.Jul    0\n",
              "16.Aug    0\n",
              "16.Sep    0\n",
              "16.Oct    0\n",
              "16.Nov    0\n",
              "16.Dec    0\n",
              "17.Jan    0\n",
              "17.Feb    0\n",
              "17.Mar    0\n",
              "17.Apr    0\n",
              "17.May    0\n",
              "17.Jun    0\n",
              "17.Jul    0\n",
              "17.Aug    0\n",
              "17.Sep    0\n",
              "17.Oct    0\n",
              "17.Nov    0\n",
              "17.Dec    0\n",
              "18.Jan    0\n",
              "18.Feb    0\n",
              "18.Mar    0\n",
              "18.Apr    0\n",
              "18.May    0\n",
              "18.Jun    0\n",
              "18.Jul    0\n",
              "18.Aug    0\n",
              "18.Sep    0\n",
              "18.Oct    0\n",
              "18.Nov    0\n",
              "18.Dec    0\n",
              "19.Jan    0\n",
              "19.Feb    0\n",
              "19.Mar    0\n",
              "19.Apr    0\n",
              "19.May    0\n",
              "19.Jun    0\n",
              "19.Jul    0\n",
              "19.Aug    0\n",
              "19.Sep    0\n",
              "19.Oct    0\n",
              "19.Nov    0\n",
              "19.Dec    0\n",
              "20.Jan    0\n",
              "20.Feb    0\n",
              "20.Mar    0\n",
              "20.Apr    0\n",
              "20.May    0\n",
              "20.Jun    0\n",
              "20.Jul    0\n",
              "20.Aug    0\n",
              "20.Sep    0\n",
              "20.Oct    0\n",
              "20.Nov    0\n",
              "20.Dec    0\n",
              "21.Jan    0\n",
              "21.Feb    0\n",
              "21.Mar    0\n",
              "21.Apr    0\n",
              "21.May    0\n",
              "21.Jun    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#행렬 전환\n",
        "\n",
        "df = df.set_index('지역')\n",
        "df = df.transpose()\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 334
        },
        "outputId": "9a49d917-6a27-4e31-a73a-a97f87c1c7a0",
        "id": "2BCPzfocxQmr"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "지역            전국       수도권       지방권     6대광역시     5대광역시       9개도       8개도  \\\n",
              "12.Jan  264474.0  365249.0  163394.0  195186.0  190421.0  211371.0  139237.0   \n",
              "12.Feb  264035.0  364275.0  163491.0  194989.0  190312.0  211340.0  139518.0   \n",
              "12.Mar  263470.0  362790.0  163849.0  195093.0  190555.0  211142.0  139979.0   \n",
              "12.Apr  262630.0  360918.0  164044.0  195037.0  190603.0  210804.0  140306.0   \n",
              "12.May  261823.0  359253.0  164096.0  194851.0  190631.0  210270.0  140378.0   \n",
              "\n",
              "지역            서울   서울 강북지역    서울 도심권  ...    경남 진주시    경남 통영시    경남 사천시  \\\n",
              "12.Jan  540954.0  405962.0  706316.0  ...  157468.0  143155.0  101292.0   \n",
              "12.Feb  538876.0  405406.0  705830.0  ...  157582.0  143155.0  101292.0   \n",
              "12.Mar  536079.0  404184.0  702286.0  ...  159802.0  143507.0  101519.0   \n",
              "12.Apr  532409.0  402746.0  701482.0  ...  159814.0  143162.0  101519.0   \n",
              "12.May  529733.0  401085.0  700462.0  ...  159700.0  143207.0  101519.0   \n",
              "\n",
              "지역        경남 김해시    경남 밀양시    경남 거제시    경남 양산시        제주    제주 제주시  제주 서귀포시  \n",
              "12.Jan  172711.0  105897.0  181049.0  130287.0  134994.0  145425.0  80868.0  \n",
              "12.Feb  171124.0  105897.0  181585.0  130202.0  139424.0  150436.0  82283.0  \n",
              "12.Mar  169589.0  105897.0  182488.0  129489.0  139830.0  150769.0  83067.0  \n",
              "12.Apr  168874.0  105971.0  183663.0  128351.0  141365.0  152481.0  83683.0  \n",
              "12.May  168084.0  105971.0  183272.0  127287.0  144561.0  155972.0  85350.0  \n",
              "\n",
              "[5 rows x 220 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e9fdee5-b37c-4390-958a-4922c07afc9a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>지역</th>\n",
              "      <th>전국</th>\n",
              "      <th>수도권</th>\n",
              "      <th>지방권</th>\n",
              "      <th>6대광역시</th>\n",
              "      <th>5대광역시</th>\n",
              "      <th>9개도</th>\n",
              "      <th>8개도</th>\n",
              "      <th>서울</th>\n",
              "      <th>서울 강북지역</th>\n",
              "      <th>서울 도심권</th>\n",
              "      <th>...</th>\n",
              "      <th>경남 진주시</th>\n",
              "      <th>경남 통영시</th>\n",
              "      <th>경남 사천시</th>\n",
              "      <th>경남 김해시</th>\n",
              "      <th>경남 밀양시</th>\n",
              "      <th>경남 거제시</th>\n",
              "      <th>경남 양산시</th>\n",
              "      <th>제주</th>\n",
              "      <th>제주 제주시</th>\n",
              "      <th>제주 서귀포시</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>12.Jan</th>\n",
              "      <td>264474.0</td>\n",
              "      <td>365249.0</td>\n",
              "      <td>163394.0</td>\n",
              "      <td>195186.0</td>\n",
              "      <td>190421.0</td>\n",
              "      <td>211371.0</td>\n",
              "      <td>139237.0</td>\n",
              "      <td>540954.0</td>\n",
              "      <td>405962.0</td>\n",
              "      <td>706316.0</td>\n",
              "      <td>...</td>\n",
              "      <td>157468.0</td>\n",
              "      <td>143155.0</td>\n",
              "      <td>101292.0</td>\n",
              "      <td>172711.0</td>\n",
              "      <td>105897.0</td>\n",
              "      <td>181049.0</td>\n",
              "      <td>130287.0</td>\n",
              "      <td>134994.0</td>\n",
              "      <td>145425.0</td>\n",
              "      <td>80868.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12.Feb</th>\n",
              "      <td>264035.0</td>\n",
              "      <td>364275.0</td>\n",
              "      <td>163491.0</td>\n",
              "      <td>194989.0</td>\n",
              "      <td>190312.0</td>\n",
              "      <td>211340.0</td>\n",
              "      <td>139518.0</td>\n",
              "      <td>538876.0</td>\n",
              "      <td>405406.0</td>\n",
              "      <td>705830.0</td>\n",
              "      <td>...</td>\n",
              "      <td>157582.0</td>\n",
              "      <td>143155.0</td>\n",
              "      <td>101292.0</td>\n",
              "      <td>171124.0</td>\n",
              "      <td>105897.0</td>\n",
              "      <td>181585.0</td>\n",
              "      <td>130202.0</td>\n",
              "      <td>139424.0</td>\n",
              "      <td>150436.0</td>\n",
              "      <td>82283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12.Mar</th>\n",
              "      <td>263470.0</td>\n",
              "      <td>362790.0</td>\n",
              "      <td>163849.0</td>\n",
              "      <td>195093.0</td>\n",
              "      <td>190555.0</td>\n",
              "      <td>211142.0</td>\n",
              "      <td>139979.0</td>\n",
              "      <td>536079.0</td>\n",
              "      <td>404184.0</td>\n",
              "      <td>702286.0</td>\n",
              "      <td>...</td>\n",
              "      <td>159802.0</td>\n",
              "      <td>143507.0</td>\n",
              "      <td>101519.0</td>\n",
              "      <td>169589.0</td>\n",
              "      <td>105897.0</td>\n",
              "      <td>182488.0</td>\n",
              "      <td>129489.0</td>\n",
              "      <td>139830.0</td>\n",
              "      <td>150769.0</td>\n",
              "      <td>83067.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12.Apr</th>\n",
              "      <td>262630.0</td>\n",
              "      <td>360918.0</td>\n",
              "      <td>164044.0</td>\n",
              "      <td>195037.0</td>\n",
              "      <td>190603.0</td>\n",
              "      <td>210804.0</td>\n",
              "      <td>140306.0</td>\n",
              "      <td>532409.0</td>\n",
              "      <td>402746.0</td>\n",
              "      <td>701482.0</td>\n",
              "      <td>...</td>\n",
              "      <td>159814.0</td>\n",
              "      <td>143162.0</td>\n",
              "      <td>101519.0</td>\n",
              "      <td>168874.0</td>\n",
              "      <td>105971.0</td>\n",
              "      <td>183663.0</td>\n",
              "      <td>128351.0</td>\n",
              "      <td>141365.0</td>\n",
              "      <td>152481.0</td>\n",
              "      <td>83683.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12.May</th>\n",
              "      <td>261823.0</td>\n",
              "      <td>359253.0</td>\n",
              "      <td>164096.0</td>\n",
              "      <td>194851.0</td>\n",
              "      <td>190631.0</td>\n",
              "      <td>210270.0</td>\n",
              "      <td>140378.0</td>\n",
              "      <td>529733.0</td>\n",
              "      <td>401085.0</td>\n",
              "      <td>700462.0</td>\n",
              "      <td>...</td>\n",
              "      <td>159700.0</td>\n",
              "      <td>143207.0</td>\n",
              "      <td>101519.0</td>\n",
              "      <td>168084.0</td>\n",
              "      <td>105971.0</td>\n",
              "      <td>183272.0</td>\n",
              "      <td>127287.0</td>\n",
              "      <td>144561.0</td>\n",
              "      <td>155972.0</td>\n",
              "      <td>85350.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 220 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e9fdee5-b37c-4390-958a-4922c07afc9a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9e9fdee5-b37c-4390-958a-4922c07afc9a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9e9fdee5-b37c-4390-958a-4922c07afc9a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#datetime으로 변환\n",
        "#날짜를 index로\n",
        "\n",
        "df = df.reset_index()\n",
        "df['index'] = pd.to_datetime(df['index'], format='%y.%b')\n",
        "df = df.rename({'index' : '날짜'}, axis=1)\n",
        "df = df.set_index('날짜')\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "wimB6VTTpWG5",
        "outputId": "6a9745c8-0fd1-4cd4-f9a0-a4f29877cc38"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "지역                전국       수도권       지방권     6대광역시     5대광역시       9개도  \\\n",
              "날짜                                                                       \n",
              "2012-01-01  264474.0  365249.0  163394.0  195186.0  190421.0  211371.0   \n",
              "2012-02-01  264035.0  364275.0  163491.0  194989.0  190312.0  211340.0   \n",
              "2012-03-01  263470.0  362790.0  163849.0  195093.0  190555.0  211142.0   \n",
              "2012-04-01  262630.0  360918.0  164044.0  195037.0  190603.0  210804.0   \n",
              "2012-05-01  261823.0  359253.0  164096.0  194851.0  190631.0  210270.0   \n",
              "\n",
              "지역               8개도        서울   서울 강북지역    서울 도심권  ...    경남 진주시    경남 통영시  \\\n",
              "날짜                                                  ...                       \n",
              "2012-01-01  139237.0  540954.0  405962.0  706316.0  ...  157468.0  143155.0   \n",
              "2012-02-01  139518.0  538876.0  405406.0  705830.0  ...  157582.0  143155.0   \n",
              "2012-03-01  139979.0  536079.0  404184.0  702286.0  ...  159802.0  143507.0   \n",
              "2012-04-01  140306.0  532409.0  402746.0  701482.0  ...  159814.0  143162.0   \n",
              "2012-05-01  140378.0  529733.0  401085.0  700462.0  ...  159700.0  143207.0   \n",
              "\n",
              "지역            경남 사천시    경남 김해시    경남 밀양시    경남 거제시    경남 양산시        제주  \\\n",
              "날짜                                                                       \n",
              "2012-01-01  101292.0  172711.0  105897.0  181049.0  130287.0  134994.0   \n",
              "2012-02-01  101292.0  171124.0  105897.0  181585.0  130202.0  139424.0   \n",
              "2012-03-01  101519.0  169589.0  105897.0  182488.0  129489.0  139830.0   \n",
              "2012-04-01  101519.0  168874.0  105971.0  183663.0  128351.0  141365.0   \n",
              "2012-05-01  101519.0  168084.0  105971.0  183272.0  127287.0  144561.0   \n",
              "\n",
              "지역            제주 제주시  제주 서귀포시  \n",
              "날짜                             \n",
              "2012-01-01  145425.0  80868.0  \n",
              "2012-02-01  150436.0  82283.0  \n",
              "2012-03-01  150769.0  83067.0  \n",
              "2012-04-01  152481.0  83683.0  \n",
              "2012-05-01  155972.0  85350.0  \n",
              "\n",
              "[5 rows x 220 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7c1c6197-a63c-4d8f-a6ba-f2d8575c6bbf\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>지역</th>\n",
              "      <th>전국</th>\n",
              "      <th>수도권</th>\n",
              "      <th>지방권</th>\n",
              "      <th>6대광역시</th>\n",
              "      <th>5대광역시</th>\n",
              "      <th>9개도</th>\n",
              "      <th>8개도</th>\n",
              "      <th>서울</th>\n",
              "      <th>서울 강북지역</th>\n",
              "      <th>서울 도심권</th>\n",
              "      <th>...</th>\n",
              "      <th>경남 진주시</th>\n",
              "      <th>경남 통영시</th>\n",
              "      <th>경남 사천시</th>\n",
              "      <th>경남 김해시</th>\n",
              "      <th>경남 밀양시</th>\n",
              "      <th>경남 거제시</th>\n",
              "      <th>경남 양산시</th>\n",
              "      <th>제주</th>\n",
              "      <th>제주 제주시</th>\n",
              "      <th>제주 서귀포시</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>날짜</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2012-01-01</th>\n",
              "      <td>264474.0</td>\n",
              "      <td>365249.0</td>\n",
              "      <td>163394.0</td>\n",
              "      <td>195186.0</td>\n",
              "      <td>190421.0</td>\n",
              "      <td>211371.0</td>\n",
              "      <td>139237.0</td>\n",
              "      <td>540954.0</td>\n",
              "      <td>405962.0</td>\n",
              "      <td>706316.0</td>\n",
              "      <td>...</td>\n",
              "      <td>157468.0</td>\n",
              "      <td>143155.0</td>\n",
              "      <td>101292.0</td>\n",
              "      <td>172711.0</td>\n",
              "      <td>105897.0</td>\n",
              "      <td>181049.0</td>\n",
              "      <td>130287.0</td>\n",
              "      <td>134994.0</td>\n",
              "      <td>145425.0</td>\n",
              "      <td>80868.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-02-01</th>\n",
              "      <td>264035.0</td>\n",
              "      <td>364275.0</td>\n",
              "      <td>163491.0</td>\n",
              "      <td>194989.0</td>\n",
              "      <td>190312.0</td>\n",
              "      <td>211340.0</td>\n",
              "      <td>139518.0</td>\n",
              "      <td>538876.0</td>\n",
              "      <td>405406.0</td>\n",
              "      <td>705830.0</td>\n",
              "      <td>...</td>\n",
              "      <td>157582.0</td>\n",
              "      <td>143155.0</td>\n",
              "      <td>101292.0</td>\n",
              "      <td>171124.0</td>\n",
              "      <td>105897.0</td>\n",
              "      <td>181585.0</td>\n",
              "      <td>130202.0</td>\n",
              "      <td>139424.0</td>\n",
              "      <td>150436.0</td>\n",
              "      <td>82283.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-03-01</th>\n",
              "      <td>263470.0</td>\n",
              "      <td>362790.0</td>\n",
              "      <td>163849.0</td>\n",
              "      <td>195093.0</td>\n",
              "      <td>190555.0</td>\n",
              "      <td>211142.0</td>\n",
              "      <td>139979.0</td>\n",
              "      <td>536079.0</td>\n",
              "      <td>404184.0</td>\n",
              "      <td>702286.0</td>\n",
              "      <td>...</td>\n",
              "      <td>159802.0</td>\n",
              "      <td>143507.0</td>\n",
              "      <td>101519.0</td>\n",
              "      <td>169589.0</td>\n",
              "      <td>105897.0</td>\n",
              "      <td>182488.0</td>\n",
              "      <td>129489.0</td>\n",
              "      <td>139830.0</td>\n",
              "      <td>150769.0</td>\n",
              "      <td>83067.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-04-01</th>\n",
              "      <td>262630.0</td>\n",
              "      <td>360918.0</td>\n",
              "      <td>164044.0</td>\n",
              "      <td>195037.0</td>\n",
              "      <td>190603.0</td>\n",
              "      <td>210804.0</td>\n",
              "      <td>140306.0</td>\n",
              "      <td>532409.0</td>\n",
              "      <td>402746.0</td>\n",
              "      <td>701482.0</td>\n",
              "      <td>...</td>\n",
              "      <td>159814.0</td>\n",
              "      <td>143162.0</td>\n",
              "      <td>101519.0</td>\n",
              "      <td>168874.0</td>\n",
              "      <td>105971.0</td>\n",
              "      <td>183663.0</td>\n",
              "      <td>128351.0</td>\n",
              "      <td>141365.0</td>\n",
              "      <td>152481.0</td>\n",
              "      <td>83683.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-05-01</th>\n",
              "      <td>261823.0</td>\n",
              "      <td>359253.0</td>\n",
              "      <td>164096.0</td>\n",
              "      <td>194851.0</td>\n",
              "      <td>190631.0</td>\n",
              "      <td>210270.0</td>\n",
              "      <td>140378.0</td>\n",
              "      <td>529733.0</td>\n",
              "      <td>401085.0</td>\n",
              "      <td>700462.0</td>\n",
              "      <td>...</td>\n",
              "      <td>159700.0</td>\n",
              "      <td>143207.0</td>\n",
              "      <td>101519.0</td>\n",
              "      <td>168084.0</td>\n",
              "      <td>105971.0</td>\n",
              "      <td>183272.0</td>\n",
              "      <td>127287.0</td>\n",
              "      <td>144561.0</td>\n",
              "      <td>155972.0</td>\n",
              "      <td>85350.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 220 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c1c6197-a63c-4d8f-a6ba-f2d8575c6bbf')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7c1c6197-a63c-4d8f-a6ba-f2d8575c6bbf button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7c1c6197-a63c-4d8f-a6ba-f2d8575c6bbf');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#dytpe int로 변환\n",
        "\n",
        "df = df.astype(int)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 415
        },
        "outputId": "951d52a4-6a91-4ec1-91e5-7b2418a86981",
        "id": "itZBF08BxQms"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "지역              전국     수도권     지방권   6대광역시   5대광역시     9개도     8개도      서울  \\\n",
              "날짜                                                                           \n",
              "2012-01-01  264474  365249  163394  195186  190421  211371  139237  540954   \n",
              "2012-02-01  264035  364275  163491  194989  190312  211340  139518  538876   \n",
              "2012-03-01  263470  362790  163849  195093  190555  211142  139979  536079   \n",
              "2012-04-01  262630  360918  164044  195037  190603  210804  140306  532409   \n",
              "2012-05-01  261823  359253  164096  194851  190631  210270  140378  529733   \n",
              "\n",
              "지역          서울 강북지역  서울 도심권  ...  경남 진주시  경남 통영시  경남 사천시  경남 김해시  경남 밀양시  \\\n",
              "날짜                           ...                                           \n",
              "2012-01-01   405962  706316  ...  157468  143155  101292  172711  105897   \n",
              "2012-02-01   405406  705830  ...  157582  143155  101292  171124  105897   \n",
              "2012-03-01   404184  702286  ...  159802  143507  101519  169589  105897   \n",
              "2012-04-01   402746  701482  ...  159814  143162  101519  168874  105971   \n",
              "2012-05-01   401085  700462  ...  159700  143207  101519  168084  105971   \n",
              "\n",
              "지역          경남 거제시  경남 양산시      제주  제주 제주시  제주 서귀포시  \n",
              "날짜                                                   \n",
              "2012-01-01  181049  130287  134994  145425    80868  \n",
              "2012-02-01  181585  130202  139424  150436    82283  \n",
              "2012-03-01  182488  129489  139830  150769    83067  \n",
              "2012-04-01  183663  128351  141365  152481    83683  \n",
              "2012-05-01  183272  127287  144561  155972    85350  \n",
              "\n",
              "[5 rows x 220 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-08db8656-ff73-471e-8c66-ae5156c168ee\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>지역</th>\n",
              "      <th>전국</th>\n",
              "      <th>수도권</th>\n",
              "      <th>지방권</th>\n",
              "      <th>6대광역시</th>\n",
              "      <th>5대광역시</th>\n",
              "      <th>9개도</th>\n",
              "      <th>8개도</th>\n",
              "      <th>서울</th>\n",
              "      <th>서울 강북지역</th>\n",
              "      <th>서울 도심권</th>\n",
              "      <th>...</th>\n",
              "      <th>경남 진주시</th>\n",
              "      <th>경남 통영시</th>\n",
              "      <th>경남 사천시</th>\n",
              "      <th>경남 김해시</th>\n",
              "      <th>경남 밀양시</th>\n",
              "      <th>경남 거제시</th>\n",
              "      <th>경남 양산시</th>\n",
              "      <th>제주</th>\n",
              "      <th>제주 제주시</th>\n",
              "      <th>제주 서귀포시</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>날짜</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2012-01-01</th>\n",
              "      <td>264474</td>\n",
              "      <td>365249</td>\n",
              "      <td>163394</td>\n",
              "      <td>195186</td>\n",
              "      <td>190421</td>\n",
              "      <td>211371</td>\n",
              "      <td>139237</td>\n",
              "      <td>540954</td>\n",
              "      <td>405962</td>\n",
              "      <td>706316</td>\n",
              "      <td>...</td>\n",
              "      <td>157468</td>\n",
              "      <td>143155</td>\n",
              "      <td>101292</td>\n",
              "      <td>172711</td>\n",
              "      <td>105897</td>\n",
              "      <td>181049</td>\n",
              "      <td>130287</td>\n",
              "      <td>134994</td>\n",
              "      <td>145425</td>\n",
              "      <td>80868</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-02-01</th>\n",
              "      <td>264035</td>\n",
              "      <td>364275</td>\n",
              "      <td>163491</td>\n",
              "      <td>194989</td>\n",
              "      <td>190312</td>\n",
              "      <td>211340</td>\n",
              "      <td>139518</td>\n",
              "      <td>538876</td>\n",
              "      <td>405406</td>\n",
              "      <td>705830</td>\n",
              "      <td>...</td>\n",
              "      <td>157582</td>\n",
              "      <td>143155</td>\n",
              "      <td>101292</td>\n",
              "      <td>171124</td>\n",
              "      <td>105897</td>\n",
              "      <td>181585</td>\n",
              "      <td>130202</td>\n",
              "      <td>139424</td>\n",
              "      <td>150436</td>\n",
              "      <td>82283</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-03-01</th>\n",
              "      <td>263470</td>\n",
              "      <td>362790</td>\n",
              "      <td>163849</td>\n",
              "      <td>195093</td>\n",
              "      <td>190555</td>\n",
              "      <td>211142</td>\n",
              "      <td>139979</td>\n",
              "      <td>536079</td>\n",
              "      <td>404184</td>\n",
              "      <td>702286</td>\n",
              "      <td>...</td>\n",
              "      <td>159802</td>\n",
              "      <td>143507</td>\n",
              "      <td>101519</td>\n",
              "      <td>169589</td>\n",
              "      <td>105897</td>\n",
              "      <td>182488</td>\n",
              "      <td>129489</td>\n",
              "      <td>139830</td>\n",
              "      <td>150769</td>\n",
              "      <td>83067</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-04-01</th>\n",
              "      <td>262630</td>\n",
              "      <td>360918</td>\n",
              "      <td>164044</td>\n",
              "      <td>195037</td>\n",
              "      <td>190603</td>\n",
              "      <td>210804</td>\n",
              "      <td>140306</td>\n",
              "      <td>532409</td>\n",
              "      <td>402746</td>\n",
              "      <td>701482</td>\n",
              "      <td>...</td>\n",
              "      <td>159814</td>\n",
              "      <td>143162</td>\n",
              "      <td>101519</td>\n",
              "      <td>168874</td>\n",
              "      <td>105971</td>\n",
              "      <td>183663</td>\n",
              "      <td>128351</td>\n",
              "      <td>141365</td>\n",
              "      <td>152481</td>\n",
              "      <td>83683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-05-01</th>\n",
              "      <td>261823</td>\n",
              "      <td>359253</td>\n",
              "      <td>164096</td>\n",
              "      <td>194851</td>\n",
              "      <td>190631</td>\n",
              "      <td>210270</td>\n",
              "      <td>140378</td>\n",
              "      <td>529733</td>\n",
              "      <td>401085</td>\n",
              "      <td>700462</td>\n",
              "      <td>...</td>\n",
              "      <td>159700</td>\n",
              "      <td>143207</td>\n",
              "      <td>101519</td>\n",
              "      <td>168084</td>\n",
              "      <td>105971</td>\n",
              "      <td>183272</td>\n",
              "      <td>127287</td>\n",
              "      <td>144561</td>\n",
              "      <td>155972</td>\n",
              "      <td>85350</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 220 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08db8656-ff73-471e-8c66-ae5156c168ee')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-08db8656-ff73-471e-8c66-ae5156c168ee button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-08db8656-ff73-471e-8c66-ae5156c168ee');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##4.시각화"
      ],
      "metadata": {
        "id": "sKsDVrczxQms"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###표 형식"
      ],
      "metadata": {
        "id": "MekXuIJXxQmt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#전국, 6대광역시, 서울, 경기\n",
        "#wide area -> w\n",
        "\n",
        "df_w = df[['전국', '서울', '경기', '6대광역시']]\n",
        "df_w"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "b676f424-745e-4cf4-8aef-b1da5bb01bb5",
        "id": "9ByYQcdWxQmt"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "지역              전국      서울      경기   6대광역시\n",
              "날짜                                        \n",
              "2012-01-01  264474  540954  283106  195186\n",
              "2012-02-01  264035  538876  282765  194989\n",
              "2012-03-01  263470  536079  281913  195093\n",
              "2012-04-01  262630  532409  280914  195037\n",
              "2012-05-01  261823  529733  279776  194851\n",
              "2012-06-01  260425  525131  278318  194273\n",
              "2012-07-01  258959  521123  276513  193523\n",
              "2012-08-01  257163  515846  274251  192675\n",
              "2012-09-01  255680  511823  271879  192214\n",
              "2012-10-01  254426  508217  269861  191889\n",
              "2012-11-01  253440  505494  268090  191779\n",
              "2012-12-01  251459  499900  265669  191726\n",
              "2013-01-01  250134  496180  263679  191331\n",
              "2013-02-01  249292  494168  262280  190974\n",
              "2013-03-01  248895  493675  261285  190763\n",
              "2013-04-01  248952  494492  261065  191211\n",
              "2013-05-01  249460  495511  261526  191628\n",
              "2013-06-01  249330  493908  261571  191958\n",
              "2013-07-01  248705  490682  260887  192211\n",
              "2013-08-01  248058  488116  260116  192234\n",
              "2013-09-01  248189  488428  260103  192400\n",
              "2013-10-01  249144  490519  261088  193142\n",
              "2013-11-01  249657  490840  261539  193891\n",
              "2013-12-01  250066  490524  262059  194617\n",
              "2014-01-01  252332  490995  264497  198338\n",
              "2014-02-01  253063  492451  265342  198923\n",
              "2014-03-01  253977  494338  266580  199502\n",
              "2014-04-01  254180  494478  266507  199950\n",
              "2014-05-01  254179  494042  266261  200228\n",
              "2014-06-01  254207  493673  266134  200483\n",
              "2014-07-01  254273  493652  266125  200798\n",
              "2014-08-01  254646  494256  266520  201183\n",
              "2014-09-01  255658  496425  267930  201818\n",
              "2014-10-01  256639  498452  269061  202468\n",
              "2014-11-01  257252  499009  269815  203153\n",
              "2014-12-01  257685  498927  270360  203798\n",
              "2015-01-01  256960  500454  270250  204626\n",
              "2015-02-01  257770  502150  271274  205232\n",
              "2015-03-01  258966  504979  272571  206169\n",
              "2015-04-01  260724  508683  274623  207725\n",
              "2015-05-01  262134  512004  276293  208834\n",
              "2015-06-01  263642  515481  277964  210144\n",
              "2015-07-01  274990  537536  287534  227197\n",
              "2015-08-01  276080  540479  288662  227960\n",
              "2015-09-01  277359  543833  289937  228905\n",
              "2015-10-01  278709  547153  291476  230011\n",
              "2015-11-01  279746  549204  292610  231115\n",
              "2015-12-01  280443  551299  293223  231580\n",
              "2016-01-01  280494  551346  293358  231568\n",
              "2016-02-01  280335  550462  293362  231543\n",
              "2016-03-01  280234  550313  293291  231496\n",
              "2016-04-01  280278  550936  293230  231522\n",
              "2016-05-01  280468  552227  293308  231569\n",
              "2016-06-01  280692  553603  293569  231584\n",
              "2016-07-01  281061  555720  293846  231664\n",
              "2016-08-01  281537  558017  294234  231896\n",
              "2016-09-01  281340  554800  296573  233641\n",
              "2016-10-01  282377  559311  297113  234306\n",
              "2016-11-01  283165  562096  297698  235045\n",
              "2016-12-01  283287  562278  297830  235385\n",
              "2017-01-01  283255  562025  297826  235533\n",
              "2017-02-01  283334  562529  297817  235671\n",
              "2017-03-01  283908  565946  297890  235755\n",
              "2017-04-01  284256  567740  298147  235918\n",
              "2017-05-01  284784  570287  298483  236128\n",
              "2017-06-01  286026  576774  298993  236384\n",
              "2017-07-01  286673  579325  299812  236642\n",
              "2017-08-01  287768  582818  301247  237418\n",
              "2017-09-01  287993  582609  302000  237889\n",
              "2017-10-01  288461  584459  302598  238211\n",
              "2017-11-01  289072  587516  303176  238508\n",
              "2017-12-01  313552  659905  320920  257439\n",
              "2018-01-01  315961  673522  321896  257577\n",
              "2018-02-01  318503  686220  323802  257757\n",
              "2018-03-01  319757  691838  325231  257913\n",
              "2018-04-01  320248  693673  326362  258022\n",
              "2018-05-01  320271  694435  326840  257979\n",
              "2018-06-01  320157  694739  327185  257734\n",
              "2018-07-01  320135  695931  327297  257504\n",
              "2018-08-01  320944  702383  327732  257083\n",
              "2018-09-01  323915  716453  330735  257274\n",
              "2018-10-01  325205  720347  333158  257953\n",
              "2018-11-01  325441  719724  334458  258452\n",
              "2018-12-01  325014  717749  334469  258723\n",
              "2019-01-01  349426  810129  355541  268938\n",
              "2019-02-01  348312  806027  354658  268648\n",
              "2019-03-01  347165  802157  353599  268373\n",
              "2019-04-01  345809  799211  351599  267881\n",
              "2019-05-01  344891  797617  350168  267546\n",
              "2019-06-01  344322  797214  349317  267229\n",
              "2019-07-01  344195  798302  349249  266913\n",
              "2019-08-01  344332  799721  349695  266800\n",
              "2019-09-01  344798  801480  350665  267117\n",
              "2019-10-01  346156  807121  352063  267749\n",
              "2019-11-01  348031  813573  354143  268875\n",
              "2019-12-01  351787  827228  357767  270787\n",
              "2020-01-01  366793  877128  378093  282145\n",
              "2020-02-01  368783  877185  383242  283622\n",
              "2020-03-01  372016  876857  391027  286740\n",
              "2020-04-01  373252  873791  395275  288289\n",
              "2020-05-01  373608  870742  397329  289127\n",
              "2020-06-01  375821  871897  400898  291510\n",
              "2020-07-01  380260  881834  406661  293779\n",
              "2020-08-01  383529  886216  411193  295977\n",
              "2020-09-01  386235  888511  415139  298907\n",
              "2020-10-01  387973  889368  417481  301505\n",
              "2020-11-01  391180  890267  422192  306330\n",
              "2020-12-01  396418  893100  428430  313976\n",
              "2021-01-01  401083  897254  435503  319357\n",
              "2021-02-01  406808  903824  445540  324733\n",
              "2021-03-01  410921  907112  452826  329139\n",
              "2021-04-01  414983  911604  459543  333113\n",
              "2021-05-01  419019  917127  465274  337314\n",
              "2021-06-01  426064  928126  475895  343728"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7d46e062-7bbb-4f4a-bd4d-9fafdd578c4c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>지역</th>\n",
              "      <th>전국</th>\n",
              "      <th>서울</th>\n",
              "      <th>경기</th>\n",
              "      <th>6대광역시</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>날짜</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2012-01-01</th>\n",
              "      <td>264474</td>\n",
              "      <td>540954</td>\n",
              "      <td>283106</td>\n",
              "      <td>195186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-02-01</th>\n",
              "      <td>264035</td>\n",
              "      <td>538876</td>\n",
              "      <td>282765</td>\n",
              "      <td>194989</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-03-01</th>\n",
              "      <td>263470</td>\n",
              "      <td>536079</td>\n",
              "      <td>281913</td>\n",
              "      <td>195093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-04-01</th>\n",
              "      <td>262630</td>\n",
              "      <td>532409</td>\n",
              "      <td>280914</td>\n",
              "      <td>195037</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-05-01</th>\n",
              "      <td>261823</td>\n",
              "      <td>529733</td>\n",
              "      <td>279776</td>\n",
              "      <td>194851</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-06-01</th>\n",
              "      <td>260425</td>\n",
              "      <td>525131</td>\n",
              "      <td>278318</td>\n",
              "      <td>194273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-07-01</th>\n",
              "      <td>258959</td>\n",
              "      <td>521123</td>\n",
              "      <td>276513</td>\n",
              "      <td>193523</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-08-01</th>\n",
              "      <td>257163</td>\n",
              "      <td>515846</td>\n",
              "      <td>274251</td>\n",
              "      <td>192675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-09-01</th>\n",
              "      <td>255680</td>\n",
              "      <td>511823</td>\n",
              "      <td>271879</td>\n",
              "      <td>192214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-10-01</th>\n",
              "      <td>254426</td>\n",
              "      <td>508217</td>\n",
              "      <td>269861</td>\n",
              "      <td>191889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-11-01</th>\n",
              "      <td>253440</td>\n",
              "      <td>505494</td>\n",
              "      <td>268090</td>\n",
              "      <td>191779</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2012-12-01</th>\n",
              "      <td>251459</td>\n",
              "      <td>499900</td>\n",
              "      <td>265669</td>\n",
              "      <td>191726</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-01-01</th>\n",
              "      <td>250134</td>\n",
              "      <td>496180</td>\n",
              "      <td>263679</td>\n",
              "      <td>191331</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-02-01</th>\n",
              "      <td>249292</td>\n",
              "      <td>494168</td>\n",
              "      <td>262280</td>\n",
              "      <td>190974</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-03-01</th>\n",
              "      <td>248895</td>\n",
              "      <td>493675</td>\n",
              "      <td>261285</td>\n",
              "      <td>190763</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-04-01</th>\n",
              "      <td>248952</td>\n",
              "      <td>494492</td>\n",
              "      <td>261065</td>\n",
              "      <td>191211</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-05-01</th>\n",
              "      <td>249460</td>\n",
              "      <td>495511</td>\n",
              "      <td>261526</td>\n",
              "      <td>191628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-06-01</th>\n",
              "      <td>249330</td>\n",
              "      <td>493908</td>\n",
              "      <td>261571</td>\n",
              "      <td>191958</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-07-01</th>\n",
              "      <td>248705</td>\n",
              "      <td>490682</td>\n",
              "      <td>260887</td>\n",
              "      <td>192211</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-08-01</th>\n",
              "      <td>248058</td>\n",
              "      <td>488116</td>\n",
              "      <td>260116</td>\n",
              "      <td>192234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-09-01</th>\n",
              "      <td>248189</td>\n",
              "      <td>488428</td>\n",
              "      <td>260103</td>\n",
              "      <td>192400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-10-01</th>\n",
              "      <td>249144</td>\n",
              "      <td>490519</td>\n",
              "      <td>261088</td>\n",
              "      <td>193142</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-11-01</th>\n",
              "      <td>249657</td>\n",
              "      <td>490840</td>\n",
              "      <td>261539</td>\n",
              "      <td>193891</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2013-12-01</th>\n",
              "      <td>250066</td>\n",
              "      <td>490524</td>\n",
              "      <td>262059</td>\n",
              "      <td>194617</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-01-01</th>\n",
              "      <td>252332</td>\n",
              "      <td>490995</td>\n",
              "      <td>264497</td>\n",
              "      <td>198338</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-02-01</th>\n",
              "      <td>253063</td>\n",
              "      <td>492451</td>\n",
              "      <td>265342</td>\n",
              "      <td>198923</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-03-01</th>\n",
              "      <td>253977</td>\n",
              "      <td>494338</td>\n",
              "      <td>266580</td>\n",
              "      <td>199502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-04-01</th>\n",
              "      <td>254180</td>\n",
              "      <td>494478</td>\n",
              "      <td>266507</td>\n",
              "      <td>199950</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-05-01</th>\n",
              "      <td>254179</td>\n",
              "      <td>494042</td>\n",
              "      <td>266261</td>\n",
              "      <td>200228</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-06-01</th>\n",
              "      <td>254207</td>\n",
              "      <td>493673</td>\n",
              "      <td>266134</td>\n",
              "      <td>200483</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-07-01</th>\n",
              "      <td>254273</td>\n",
              "      <td>493652</td>\n",
              "      <td>266125</td>\n",
              "      <td>200798</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-08-01</th>\n",
              "      <td>254646</td>\n",
              "      <td>494256</td>\n",
              "      <td>266520</td>\n",
              "      <td>201183</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-09-01</th>\n",
              "      <td>255658</td>\n",
              "      <td>496425</td>\n",
              "      <td>267930</td>\n",
              "      <td>201818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-10-01</th>\n",
              "      <td>256639</td>\n",
              "      <td>498452</td>\n",
              "      <td>269061</td>\n",
              "      <td>202468</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-11-01</th>\n",
              "      <td>257252</td>\n",
              "      <td>499009</td>\n",
              "      <td>269815</td>\n",
              "      <td>203153</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2014-12-01</th>\n",
              "      <td>257685</td>\n",
              "      <td>498927</td>\n",
              "      <td>270360</td>\n",
              "      <td>203798</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-01-01</th>\n",
              "      <td>256960</td>\n",
              "      <td>500454</td>\n",
              "      <td>270250</td>\n",
              "      <td>204626</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-02-01</th>\n",
              "      <td>257770</td>\n",
              "      <td>502150</td>\n",
              "      <td>271274</td>\n",
              "      <td>205232</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-03-01</th>\n",
              "      <td>258966</td>\n",
              "      <td>504979</td>\n",
              "      <td>272571</td>\n",
              "      <td>206169</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-04-01</th>\n",
              "      <td>260724</td>\n",
              "      <td>508683</td>\n",
              "      <td>274623</td>\n",
              "      <td>207725</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-05-01</th>\n",
              "      <td>262134</td>\n",
              "      <td>512004</td>\n",
              "      <td>276293</td>\n",
              "      <td>208834</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-06-01</th>\n",
              "      <td>263642</td>\n",
              "      <td>515481</td>\n",
              "      <td>277964</td>\n",
              "      <td>210144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-07-01</th>\n",
              "      <td>274990</td>\n",
              "      <td>537536</td>\n",
              "      <td>287534</td>\n",
              "      <td>227197</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-08-01</th>\n",
              "      <td>276080</td>\n",
              "      <td>540479</td>\n",
              "      <td>288662</td>\n",
              "      <td>227960</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-09-01</th>\n",
              "      <td>277359</td>\n",
              "      <td>543833</td>\n",
              "      <td>289937</td>\n",
              "      <td>228905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-10-01</th>\n",
              "      <td>278709</td>\n",
              "      <td>547153</td>\n",
              "      <td>291476</td>\n",
              "      <td>230011</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-11-01</th>\n",
              "      <td>279746</td>\n",
              "      <td>549204</td>\n",
              "      <td>292610</td>\n",
              "      <td>231115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2015-12-01</th>\n",
              "      <td>280443</td>\n",
              "      <td>551299</td>\n",
              "      <td>293223</td>\n",
              "      <td>231580</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-01-01</th>\n",
              "      <td>280494</td>\n",
              "      <td>551346</td>\n",
              "      <td>293358</td>\n",
              "      <td>231568</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-02-01</th>\n",
              "      <td>280335</td>\n",
              "      <td>550462</td>\n",
              "      <td>293362</td>\n",
              "      <td>231543</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-03-01</th>\n",
              "      <td>280234</td>\n",
              "      <td>550313</td>\n",
              "      <td>293291</td>\n",
              "      <td>231496</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-04-01</th>\n",
              "      <td>280278</td>\n",
              "      <td>550936</td>\n",
              "      <td>293230</td>\n",
              "      <td>231522</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-05-01</th>\n",
              "      <td>280468</td>\n",
              "      <td>552227</td>\n",
              "      <td>293308</td>\n",
              "      <td>231569</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-06-01</th>\n",
              "      <td>280692</td>\n",
              "      <td>553603</td>\n",
              "      <td>293569</td>\n",
              "      <td>231584</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-07-01</th>\n",
              "      <td>281061</td>\n",
              "      <td>555720</td>\n",
              "      <td>293846</td>\n",
              "      <td>231664</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-08-01</th>\n",
              "      <td>281537</td>\n",
              "      <td>558017</td>\n",
              "      <td>294234</td>\n",
              "      <td>231896</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-09-01</th>\n",
              "      <td>281340</td>\n",
              "      <td>554800</td>\n",
              "      <td>296573</td>\n",
              "      <td>233641</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-10-01</th>\n",
              "      <td>282377</td>\n",
              "      <td>559311</td>\n",
              "      <td>297113</td>\n",
              "      <td>234306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-11-01</th>\n",
              "      <td>283165</td>\n",
              "      <td>562096</td>\n",
              "      <td>297698</td>\n",
              "      <td>235045</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2016-12-01</th>\n",
              "      <td>283287</td>\n",
              "      <td>562278</td>\n",
              "      <td>297830</td>\n",
              "      <td>235385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-01-01</th>\n",
              "      <td>283255</td>\n",
              "      <td>562025</td>\n",
              "      <td>297826</td>\n",
              "      <td>235533</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-02-01</th>\n",
              "      <td>283334</td>\n",
              "      <td>562529</td>\n",
              "      <td>297817</td>\n",
              "      <td>235671</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-03-01</th>\n",
              "      <td>283908</td>\n",
              "      <td>565946</td>\n",
              "      <td>297890</td>\n",
              "      <td>235755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-04-01</th>\n",
              "      <td>284256</td>\n",
              "      <td>567740</td>\n",
              "      <td>298147</td>\n",
              "      <td>235918</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-05-01</th>\n",
              "      <td>284784</td>\n",
              "      <td>570287</td>\n",
              "      <td>298483</td>\n",
              "      <td>236128</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-06-01</th>\n",
              "      <td>286026</td>\n",
              "      <td>576774</td>\n",
              "      <td>298993</td>\n",
              "      <td>236384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-07-01</th>\n",
              "      <td>286673</td>\n",
              "      <td>579325</td>\n",
              "      <td>299812</td>\n",
              "      <td>236642</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-08-01</th>\n",
              "      <td>287768</td>\n",
              "      <td>582818</td>\n",
              "      <td>301247</td>\n",
              "      <td>237418</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-09-01</th>\n",
              "      <td>287993</td>\n",
              "      <td>582609</td>\n",
              "      <td>302000</td>\n",
              "      <td>237889</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-10-01</th>\n",
              "      <td>288461</td>\n",
              "      <td>584459</td>\n",
              "      <td>302598</td>\n",
              "      <td>238211</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-11-01</th>\n",
              "      <td>289072</td>\n",
              "      <td>587516</td>\n",
              "      <td>303176</td>\n",
              "      <td>238508</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2017-12-01</th>\n",
              "      <td>313552</td>\n",
              "      <td>659905</td>\n",
              "      <td>320920</td>\n",
              "      <td>257439</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-01</th>\n",
              "      <td>315961</td>\n",
              "      <td>673522</td>\n",
              "      <td>321896</td>\n",
              "      <td>257577</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-02-01</th>\n",
              "      <td>318503</td>\n",
              "      <td>686220</td>\n",
              "      <td>323802</td>\n",
              "      <td>257757</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-03-01</th>\n",
              "      <td>319757</td>\n",
              "      <td>691838</td>\n",
              "      <td>325231</td>\n",
              "      <td>257913</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-04-01</th>\n",
              "      <td>320248</td>\n",
              "      <td>693673</td>\n",
              "      <td>326362</td>\n",
              "      <td>258022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-05-01</th>\n",
              "      <td>320271</td>\n",
              "      <td>694435</td>\n",
              "      <td>326840</td>\n",
              "      <td>257979</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-06-01</th>\n",
              "      <td>320157</td>\n",
              "      <td>694739</td>\n",
              "      <td>327185</td>\n",
              "      <td>257734</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-07-01</th>\n",
              "      <td>320135</td>\n",
              "      <td>695931</td>\n",
              "      <td>327297</td>\n",
              "      <td>257504</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-08-01</th>\n",
              "      <td>320944</td>\n",
              "      <td>702383</td>\n",
              "      <td>327732</td>\n",
              "      <td>257083</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-09-01</th>\n",
              "      <td>323915</td>\n",
              "      <td>716453</td>\n",
              "      <td>330735</td>\n",
              "      <td>257274</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-10-01</th>\n",
              "      <td>325205</td>\n",
              "      <td>720347</td>\n",
              "      <td>333158</td>\n",
              "      <td>257953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-11-01</th>\n",
              "      <td>325441</td>\n",
              "      <td>719724</td>\n",
              "      <td>334458</td>\n",
              "      <td>258452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-12-01</th>\n",
              "      <td>325014</td>\n",
              "      <td>717749</td>\n",
              "      <td>334469</td>\n",
              "      <td>258723</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-01</th>\n",
              "      <td>349426</td>\n",
              "      <td>810129</td>\n",
              "      <td>355541</td>\n",
              "      <td>268938</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-02-01</th>\n",
              "      <td>348312</td>\n",
              "      <td>806027</td>\n",
              "      <td>354658</td>\n",
              "      <td>268648</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-03-01</th>\n",
              "      <td>347165</td>\n",
              "      <td>802157</td>\n",
              "      <td>353599</td>\n",
              "      <td>268373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-04-01</th>\n",
              "      <td>345809</td>\n",
              "      <td>799211</td>\n",
              "      <td>351599</td>\n",
              "      <td>267881</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-05-01</th>\n",
              "      <td>344891</td>\n",
              "      <td>797617</td>\n",
              "      <td>350168</td>\n",
              "      <td>267546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-06-01</th>\n",
              "      <td>344322</td>\n",
              "      <td>797214</td>\n",
              "      <td>349317</td>\n",
              "      <td>267229</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-07-01</th>\n",
              "      <td>344195</td>\n",
              "      <td>798302</td>\n",
              "      <td>349249</td>\n",
              "      <td>266913</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-08-01</th>\n",
              "      <td>344332</td>\n",
              "      <td>799721</td>\n",
              "      <td>349695</td>\n",
              "      <td>266800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-09-01</th>\n",
              "      <td>344798</td>\n",
              "      <td>801480</td>\n",
              "      <td>350665</td>\n",
              "      <td>267117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-10-01</th>\n",
              "      <td>346156</td>\n",
              "      <td>807121</td>\n",
              "      <td>352063</td>\n",
              "      <td>267749</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-11-01</th>\n",
              "      <td>348031</td>\n",
              "      <td>813573</td>\n",
              "      <td>354143</td>\n",
              "      <td>268875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-12-01</th>\n",
              "      <td>351787</td>\n",
              "      <td>827228</td>\n",
              "      <td>357767</td>\n",
              "      <td>270787</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-01-01</th>\n",
              "      <td>366793</td>\n",
              "      <td>877128</td>\n",
              "      <td>378093</td>\n",
              "      <td>282145</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-02-01</th>\n",
              "      <td>368783</td>\n",
              "      <td>877185</td>\n",
              "      <td>383242</td>\n",
              "      <td>283622</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-03-01</th>\n",
              "      <td>372016</td>\n",
              "      <td>876857</td>\n",
              "      <td>391027</td>\n",
              "      <td>286740</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-04-01</th>\n",
              "      <td>373252</td>\n",
              "      <td>873791</td>\n",
              "      <td>395275</td>\n",
              "      <td>288289</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-05-01</th>\n",
              "      <td>373608</td>\n",
              "      <td>870742</td>\n",
              "      <td>397329</td>\n",
              "      <td>289127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-06-01</th>\n",
              "      <td>375821</td>\n",
              "      <td>871897</td>\n",
              "      <td>400898</td>\n",
              "      <td>291510</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-07-01</th>\n",
              "      <td>380260</td>\n",
              "      <td>881834</td>\n",
              "      <td>406661</td>\n",
              "      <td>293779</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-08-01</th>\n",
              "      <td>383529</td>\n",
              "      <td>886216</td>\n",
              "      <td>411193</td>\n",
              "      <td>295977</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-09-01</th>\n",
              "      <td>386235</td>\n",
              "      <td>888511</td>\n",
              "      <td>415139</td>\n",
              "      <td>298907</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-10-01</th>\n",
              "      <td>387973</td>\n",
              "      <td>889368</td>\n",
              "      <td>417481</td>\n",
              "      <td>301505</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-11-01</th>\n",
              "      <td>391180</td>\n",
              "      <td>890267</td>\n",
              "      <td>422192</td>\n",
              "      <td>306330</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-12-01</th>\n",
              "      <td>396418</td>\n",
              "      <td>893100</td>\n",
              "      <td>428430</td>\n",
              "      <td>313976</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-01-01</th>\n",
              "      <td>401083</td>\n",
              "      <td>897254</td>\n",
              "      <td>435503</td>\n",
              "      <td>319357</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-01</th>\n",
              "      <td>406808</td>\n",
              "      <td>903824</td>\n",
              "      <td>445540</td>\n",
              "      <td>324733</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-01</th>\n",
              "      <td>410921</td>\n",
              "      <td>907112</td>\n",
              "      <td>452826</td>\n",
              "      <td>329139</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-04-01</th>\n",
              "      <td>414983</td>\n",
              "      <td>911604</td>\n",
              "      <td>459543</td>\n",
              "      <td>333113</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-05-01</th>\n",
              "      <td>419019</td>\n",
              "      <td>917127</td>\n",
              "      <td>465274</td>\n",
              "      <td>337314</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-06-01</th>\n",
              "      <td>426064</td>\n",
              "      <td>928126</td>\n",
              "      <td>475895</td>\n",
              "      <td>343728</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d46e062-7bbb-4f4a-bd4d-9fafdd578c4c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7d46e062-7bbb-4f4a-bd4d-9fafdd578c4c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7d46e062-7bbb-4f4a-bd4d-9fafdd578c4c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###그래프 형식"
      ],
      "metadata": {
        "id": "MMbfP4AsxQmt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "fig, ax = plt.subplots(figsize=(30, 10))\n",
        "\n",
        "ax.plot(df_w['전국'], linestyle='--', color=\"#FF3232\", linewidth='7')\n",
        "ax.plot(df_w['서울'], color=\"b\", alpha=0.2, linewidth='5')\n",
        "ax.plot(df_w['경기'], color=\"b\", alpha=0.5, linewidth='5')\n",
        "ax.plot(df_w['6대광역시'], color='b', alpha=0.7, linewidth='5')\n",
        "\n",
        "ax.set_ylabel(\"평균 매매 가격 (단위: 천 원)\", fontsize=20)\n",
        "\n",
        "\n",
        "\n",
        "plt.title('아파트 매매 가격 동향(2012.01 ~ 2021.06)', fontsize=50)\n",
        "\n",
        "plt.xticks(fontsize=15)\n",
        "plt.yticks(fontsize=15)\n",
        "\n",
        "plt.legend(['전국', '서울', '경기', '6대광역시'], fontsize=15)\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "outputId": "f0469727-46a7-487d-df5b-cfe3fd9201bc",
        "id": "vlB_EogAxQmt"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 2160x720 with 1 Axes>"
            ],
            "image/png": "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EREREREREWkACtyJiIiIiIiIiIiIiIiINIDu9Z6AtDVnzhxmzJhBc3NzvaciZejRowfDhg1jwIAB9Z6KiIiIiIiIiIiIiIh0AArcNZg5c+Ywffp0hg8fTp8+fTCzek9JSuDuLFy4kA8//BBAwTsRERERERERERERESlIpTIbzIwZMxg+fDh9+/ZV0K4DMzP69u3L8OHDmTFjRr2nIyIiIiIiIiIiIiIiHYACdw2mubmZPn361HsaUiF9+vRRyVMREREREREREREREUlFgbsGpEy7zkOvpYiIiIiIiIiIiIiIpKXAnYiIiIiIiIiIiIiIiEgDUOBOasrdl/1/7Nix7LDDDvWbjIiIiIiIiIiIiIiISANR4E6q4oADDqB79+5ZDzPjuOOOy7vPxRdfjJm1+/jVr35Vw69CRERERERERERERESkdrrXewLSOV111VVccsklADQ1NTFjxgw222wztt1227z7HH300YwaNSrv89tttx0DBgyo+FxFREREREREREREREQagQJ3HcXVV8M111T/OKeeCvvvX/Yww4YNy1q+9tprWWWVVdh777159913aWlpYfbs2VnbDBgwoN3A3IIFCxS4ExERERERERERERGRTkuBO6m6l156iYsuuoiLL76YPn36sNlmm/HJJ58AsP3226caY+nSpcyaNatNQFBERERERERERERERKSzUOBOqmrSpEnsueeeNDc388wzz+DuzJw5E4CxY8fy9NNPM3fu3GWBvHw++ugjWltbaWlpYfLkyfTv35+hQ4fW4ksQERERERERERERERGpiaZ6T0A6r7vvvpstt9ySLbfckldeeYUnnniC/fffv02JzBtvvJGRI0e2+9hqq60A2GmnnRg5ciQnnXRSPb4kERERERERERERERGRqlHgTirujTfe4IADDmD//ffnhz/8IbfffjvrrLMOjz/+OFOmTGH99ddn6tSpy7YfM2YM7t7mceqpp7LBBhvkfG78+PH1+wJFRERERERERERERGSZOXPqPYPOQ6UypeKamppoamrixRdfZN111122fs011+Spp57iwQcfZNVVV63jDEVEREREREREREREpFxz5sCHH8KCBbDWWjBgQL1n1PEp404qbq211uKOO+7ICtpl9OjRg2984xs59xs7dixmtuxxzjnn8Morr2StO+2006o9fRERERERERERERERaceCBfDmmzBpUvg/wJQp9Z1TZ6GMu47iBz8Ijw5m1KhR9O/fP2dpy2OPPZYjjzxy2fJpp53G8ccfn3esfAE/ERERERERERERERGpvsWLQ4bdrFltn1u4ED79FAYPrv28OhMF7qRuhg8fnrXcv39/+vfvn3f7Hj16VHtKIiIiIiIiIiIiIiKS0NwM06bBzJngnn+7qVNh0CAwq93cOhsF7qTq5s2bx+TJk/M+v+aaa2L6KRYRERERERERERERaSgtLTB9eni0tra/bd++MHy4gnblUuBOqm7ChAlMmDAh7/Nz585tN9NORERERERERERERERqxx0+/jhk2S1d2v62vXqFgN2gQbWZW2enwJ1U1Z133lmxsZ5++umKjSUiIiIiIiIiIiIiIm19+mnoY7dkSfvb9egBn/scDB2qLLtKUuBORERERERERERERESki/vssxCwW7iw/e26dYOVVw6PpqbazK0rUeBORERERERERERERESki1m6FObODQG7OXOgubn97c1gpZVCll13RZeqRt9aERERERERERERERGRTs4dFixYHqibPz/9vkOGwKqrQs+e1ZufBArciYiIiIiIiIiIiIiIdEJLloQgXebR0lLc/iuuCMOHQ58+1ZmftKXAnYiIiIiIiIiIiIiISCfQ3Bwy6ebNC4G6Qv3q8unXLwTsVlihsvOTwhS4ExERERERERERERER6WAypS/nz18erFuypPTxzKB/fxg2DAYOrNw8pTgK3ImIiIiIiIiIiIiIiDS4JUuyg3QLFoTgXTl69QrlMAcMCNl1TU2VmauUToE7ERERERERERERERGRBtLcHMpcxjPqmpvLH7epKQTpMo9evcofUypLgTsREREREREREREREZE6aG0NAbrkY+nSyh2jb9/lgbr+/UNJTGlcCtxJ3YwdO5ann36axx9/fNm6d955hwsuuIBHH32UDz74gNbWVoYNG8aWW27J8ccfzzbbbFO/CYuIiIiIiIiIiIiIlGjp0uUlLjMBusWLK3+cPn1CgK5fvxCs69Gj8seQ6mm4aqVmdqyZvWVmi8zsBTPbN/Zck5n9wsymmdl8M7vHzNZM7D/EzG4yszlm9omZXWFmfRLbbGRm/zCzhWb2rpmNyTGPg8zstWgez5vZjonnC85FYM6cOZgZ9957b8Ftp0yZwiabbMJ7773HVVddxVtvvcWU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9av87Gc/49Zbb2XlypUA7FP6qsz3vvc9AAYGBmiawQmz5XkefPBBGhsbWb16NUNDQzvnLRscHKS3t5eWlhb++7//m6c+9ak7QzuAJzzhCaxYsYIvfelL/MVf/AW9vb0TBnNbtmwBYP/99592nZIkSZIkSZKmVm2bzNWrobFx/muRpHphcFfnXvjCWlcw4tprpz/2c5/7HO94xzt2hm2z6dRTT2Xvvffmkksu4a677uKwww4bdf+0007jtNNO44orruCAAw7gpz/96aj7mzZtYtu2bdx999385je/ob+/f8Jn3XrrrbS2trJ69epZ/3NIkiRJkiRJi1VXF1Q7/cZtMiUtdp5xp1nX3d3Nz372M4499lhOOukkDj30UI4++mguv/zyaX3+wx/+MBHBv/7rv045trW1lRe96EWj+j7xiU9w//3389KXvpRTTjmFBx54gPe+9708+uij3H333bzuda9jzZo1fOMb3+D000/nne9854Tzf//736evr49rZ5JaSpIkSZIkSZpUtdV2HR3giTWSFjuDO826O++8k+HhYd71rnfx1Kc+leuuu45TTz2VN7/5zXzhC1+Y8vNve9vbuP/++3nFK16xs29gYIDe3l56e3sZHh6mr6+PTZs28eIXv5hjjjmGq6++mltuuQWAVatWceCBB9Le3s7atWv57ne/y9VXX83q1at5zGMeA8AvfvELbr75Zm6++WZ++MMfVq3j4Ycf5pvf/CbPfvazOeeccxgcHJyFn44kSZIkSZK0eA0Nwe9/X5xvN5ar7STJrTI1B7Zv3w7AscceyxlnnAHAkUceyZ133slHPvIRLrzwwkk/v2zZsp3BW1dXFwAnn3wyX/7yl0eN+8pXvsKyZcvYa6+9WLt2LWeddVbV+Z7xjGdw2223sWnTJtra2li1atWo+xHB0qVLaRyzefb73/9+DjvsML71rW9x5JFHcu6553LuuedO/wchSZIkSZIkaafOziK0q3ZyTVMTzMGpO5K04BjcadYtW7YMgJe85CWj+o877jjOP//8nSvXhoeHefTRR3n44Ye54447WLFixYRzXnjhhZx//vlEBI2NjbS2ttLS0sK2bduICFauXElEcMYZZ3D00UdXnWPt2rVV+1tbW3cGhGVf/epXufjii/nxj3/M0qVL+eIXv8hznvMc9t9/f0477bRp/ywkSZIkSZKkxW54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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}